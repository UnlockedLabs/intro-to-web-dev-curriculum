<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading on Introduction to Web Dev</title>
    <link>http://localhost:1313/how-to-write-code/reading/index.html</link>
    <description>Recent content in Reading on Introduction to Web Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Jul 2023 14:00:03 -0500</lastBuildDate><atom:link href="http://localhost:1313/how-to-write-code/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is Code?</title>
      <link>http://localhost:1313/how-to-write-code/reading/introduction/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/introduction/index.html</guid>
      <description>Computers are dumb, understanding not an ounce of context or intended meaning. They react mechanically to the instructions we give them, and they cannot deviate from the steps we tell them to follow.
If our instructions are even the slightest bit off, computers cannot consider the error and adjust accordingly. Instead, they come to a grinding halt.
So how do we give computers instructions in the first place? The answer is to create code, which is a set of instructions for a computer to follow.</description>
    </item>
    <item>
      <title>Syntax Rules</title>
      <link>http://localhost:1313/how-to-write-code/reading/syntax-rules/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/syntax-rules/index.html</guid>
      <description>At their core, programming languages are collections of rules that allow us to tell a computer what to do. Actions like Repeat 25 times, Prompt the user for a password, or Display text on the screen can be done with any language. However, each one uses different methods to complete the tasks.
Syntax refers to the structure of a language (spoken, programming, or otherwise) and the rules about that structure. For example, in English, a sentence must begin with a capital letter and end with proper punctuation.</description>
    </item>
    <item>
      <title>JavaScript Projects Repository</title>
      <link>http://localhost:1313/how-to-write-code/reading/javascript-projects-repo/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/javascript-projects-repo/index.html</guid>
      <description>This textbook will often reference the javascript-projects Github repository as you are working your way through. This repository contains code for most, but not all code snippets, exercises, and studios throught the book. However, it does not contain any graded assignments.
Before moving on to the next section you will need to fork and clone the javascript-projects repository. You have already completed this same process during the Your First Program section of the previous chapter.</description>
    </item>
    <item>
      <title>Comments</title>
      <link>http://localhost:1313/how-to-write-code/reading/comments/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/comments/index.html</guid>
      <description>As programs get bigger and more complicated, they get more difficult to read. Good programmers try to make their code understandable to others, but it is still tricky to look at a large program and figure out what it is doing and why.
Best practice encourages us to add notes to our programs, which clearly explain what the program is doing. These notes are called comments.
A comment is text within a program intended only for a human reader&amp;mdash;it is completely ignored by the compiler or interpreter.</description>
    </item>
    <item>
      <title>Output with console.log</title>
      <link>http://localhost:1313/how-to-write-code/reading/output/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/output/index.html</guid>
      <description>In the Hello World section, you experimented with displaying text on the screen. Technically, you sent the words to the console, which is a simple window where the user can type commands or view output. We used a print function without explicitly talking about how it works. Letâ€™s fix that now.
We call the print function using the syntax console.log(). When the code runs, we want it to tell the computer, Please display what is inside the () on the screen.</description>
    </item>
    <item>
      <title>Fixing Errors in Your Code</title>
      <link>http://localhost:1313/how-to-write-code/reading/debugging/index.html</link>
      <pubDate>Thu, 13 Jul 2023 14:00:03 -0500</pubDate>
      <guid>http://localhost:1313/how-to-write-code/reading/debugging/index.html</guid>
      <description>As you progress through this class, you will find yourself having to fix problems in your code. Whether the code simply won&amp;rsquo;t run or is giving you the wrong answer, fixing problems with code is a vital part of being a programmer. The process of working through issues in code is called debugging. We will cover debugging in depth in a later chapter, but here is what we need to know now.</description>
    </item>
  </channel>
</rss>