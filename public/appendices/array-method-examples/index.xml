<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Array Method Examples :: Introduction to Web Dev</title>
    <link>http://localhost:1313/appendices/array-method-examples/index.html</link>
    <description>Content Links concat Examples includes Example indexOf Examples join Examples push and pop Examples reverse Example shift and unshift Examples slice Examples sort Examples splice Examples split Examples </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Oct 2021 09:28:27 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/appendices/array-method-examples/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>concat Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/concat-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/concat-examples/index.html</guid>
      <description>.concat() Examples The general syntax for this method is:&#xA;arrayName.concat(otherArray1, otherArray2, ...)This method adds the elements of one array to the end of another. The new array must be stored in a variable or printed to the screen, because concat does NOT alter the original arrays.&#xA;Example let arr = [1, 2, 3]; let otherArray = [&#39;M&#39;, &#39;F&#39;, &#39;E&#39;]; let newArray = []; newArray = arr.concat(otherArray); console.log(newArray); newArray = otherArray.concat(arr); console.log(newArray); console.log(arr.concat(otherArray, arr)); console.log(arr);</description>
    </item>
    <item>
      <title>includes Example</title>
      <link>http://localhost:1313/appendices/array-method-examples/includes-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/includes-examples/index.html</guid>
      <description>.includes() Example The general syntax for this method is:&#xA;arrayName.includes(item)This method checks if an array contains the item specified in the parentheses (), and returns true or false.&#xA;Example let charles = [1, 7, 5, 9, 5]; let otherArr = [&#39;hello&#39;, &#39;world!&#39;]; console.log(charles.includes(5)); console.log(otherArr.includes(&#39;hi&#39;));</description>
    </item>
    <item>
      <title>indexOf Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/indexof-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/indexof-examples/index.html</guid>
      <description>.indexOf() Examples The general syntax for this method is:&#xA;arrayName.indexOf(item)This method returns the index of the FIRST occurence of an item in the array. If the item is not in the array, -1 is returned.&#xA;Example let charles = [1, 7, 5, 9, 5]; let otherArray = [&#39;hello&#39;, &#39;world!&#39;]; console.log(charles.indexOf(5)); console.log(otherArray.indexOf(&#39;hi&#39;));</description>
    </item>
    <item>
      <title>join Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/join-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/join-examples/index.html</guid>
      <description>.join() Examples The general syntax for this method is:&#xA;arrayName.join(&#39;connector&#39;)join combines all the elements of an array into a string. The connector determines the string that “glues” the array elements together.&#xA;Example let arr = [1, 2, 3, 4]; let words = [&#39;hello&#39;, &#39;world&#39;, &#39;!&#39;]; let newString = &#39;&#39;; newString = arr.join(&#34;+&#34;); console.log(newString); newString = words.join(&#34;&#34;); console.log(newString); newString = words.join(&#34;_&#34;); console.log(newString);</description>
    </item>
    <item>
      <title>push and pop Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/push-pop-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/push-pop-examples/index.html</guid>
      <description>.push() And .pop() Examples .push() The general syntax for this method is:&#xA;arrayName.push(item1, item2, ...)This method adds one or more items to the END of an array and returns the new length.&#xA;The new items may be of any data type.&#xA;Example let arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]; console.log(arr.push(&#39;d&#39;, &#39;f&#39;, 42)); console.log(arr);</description>
    </item>
    <item>
      <title>reverse Example</title>
      <link>http://localhost:1313/appendices/array-method-examples/reverse-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/reverse-examples/index.html</guid>
      <description>.reverse() Example The general syntax for this method is:&#xA;arrayName.reverse()This method is straightforward - it reverses the order of the elements in the array.&#xA;No arguments are placed inside the parentheses ().&#xA;Example let arr = [&#39;At&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;apple&#39;, &#39;zoo&#39;]; arr.reverse(); console.log(arr);</description>
    </item>
    <item>
      <title>shift and unshift Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/shift-unshift-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/shift-unshift-examples/index.html</guid>
      <description>.shift() And .unshift() Examples .shift() The general syntax for this method is:&#xA;arrayName.shift()This method removes and returns the FIRST element in an array.&#xA;No arguments are placed inside the parentheses ().&#xA;Example let arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]; arr.shift(); console.log(arr);</description>
    </item>
    <item>
      <title>slice Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/slice-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/slice-examples/index.html</guid>
      <description>.slice() Examples The general syntax for this method is:&#xA;arrayName.slice(starting index, ending index)This method copies a range of elements from one array into a new array. slice does NOT change the original array, but returns a new array.&#xA;The ending index is optional. If it is left out, slice returns a new array that includes everything from the starting index to the end of the original array.</description>
    </item>
    <item>
      <title>sort Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/sort-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/sort-examples/index.html</guid>
      <description>.sort() Examples The general syntax for this method is:&#xA;arrayName.sort()This method arranges the elements of an array into increasing order. For strings, this means alphabetical order. HOWEVER, the results are not always what we expect.&#xA;Example Alphabetical order?</description>
    </item>
    <item>
      <title>splice Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/splice-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/splice-examples/index.html</guid>
      <description>.splice() Examples The general syntax for this method is:&#xA;arrayName.splice(index, number of elements to change, item1, item2, ...);Inside the parentheses (), only the first argument is required.&#xA;The splice method modifies one or more elements anywhere in the array. Entries can be added, removed, or changed. This method requires practice.</description>
    </item>
    <item>
      <title>split Examples</title>
      <link>http://localhost:1313/appendices/array-method-examples/split-examples/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/appendices/array-method-examples/split-examples/index.html</guid>
      <description>.split() Examples The general syntax for this method is:&#xA;stringName.split(&#39;delimiter&#39;)split is actually a string method, but it complements the array method join.&#xA;split divides a string into smaller pieces, which are stored in a new array. The delimiter argument determines how the string is broken apart.&#xA;Example let numbers = &#34;1,2,3,4&#34;; let word = &#34;Rutabaga&#34;; let phrase = &#34;Bookkeeper of balloons.&#34; let arr = []; arr = numbers.split(&#39;,&#39;); //split the string at each comma. console.log(arr); arr = phrase.split(&#39; &#39;); //split the string at each space. console.log(arr); arr = word.split(&#39;&#39;); //split the string at each character. console.log(arr);</description>
    </item>
  </channel>
</rss>