<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: Introduction to Web Dev</title>
    <link>http://localhost:1313/fetch/reading/index.html</link>
    <description>Reading Content Fetching Data Asynchronous and Promises </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:55:09 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/fetch/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fetching Data</title>
      <link>http://localhost:1313/fetch/reading/fetching-data/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/fetch/reading/fetching-data/index.html</guid>
      <description>Now that we know what an API is, let’s use one to update a web page. Let’s use a weather API to add weather data to a web page. The URL for this special LaunchCode weather API is https://handlers.education.launchcode.org/static/weather.json .&#xA;Example JSON returned from our weather API.&#xA;{ &#34;temp&#34;: 67, &#34;windSpeed&#34;: 5, &#34;tempMin&#34;: 50, &#34;tempMax&#34;: 71, &#34;status&#34;: &#34;Sunny&#34;, &#34;chanceOfPrecipitation&#34;: 20, &#34;zipcode&#34;: 63108 }</description>
    </item>
    <item>
      <title>Asynchronous and Promises</title>
      <link>http://localhost:1313/fetch/reading/asynch-promies/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/fetch/reading/asynch-promies/index.html</guid>
      <description>In order to fully explain how the fetch function works, we need to define and talk about the terms asynchronous and synchronous.&#xA;Asynchronous: Not simultaneous or concurrent in time.&#xA;Synchronous: Simultaneous or concurrent in time.&#xA;When fetching data in JavaScript, the HTTP requests are asynchronous. In brief, that means when an HTTP request is sent, we don’t know exactly when a response will be received by the browser. Remember that HTTP requests are sent to an address, then a response is sent. That process takes a variable amount of time depending on network speed, the address location, and response size.</description>
    </item>
  </channel>
</rss>