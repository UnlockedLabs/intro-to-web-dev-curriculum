<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading on Introduction to Web Dev</title>
    <link>http://localhost:1313/user-input-with-forms/reading/index.html</link>
    <description>Recent content in Reading on Introduction to Web Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:55:09 -0500</lastBuildDate><atom:link href="http://localhost:1313/user-input-with-forms/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forms</title>
      <link>http://localhost:1313/user-input-with-forms/reading/forms/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/forms/index.html</guid>
      <description>As a user of the web, you know that web pages both display and accept data. In this chapter we are going to learn more about how web pages handle data input using HTML forms. An HTML form is used to accept input from the user and send that data to the server.
Create a Form To declare a form in HTML use the &amp;lt;form&amp;gt; tag with open and closing tags.</description>
    </item>
    <item>
      <title>Form Submission</title>
      <link>http://localhost:1313/user-input-with-forms/reading/form-submission/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/form-submission/index.html</guid>
      <description>Forms collect data input by the user. As we learned in the previous chapter, communication on the web occurs via a series of HTTP requests and responses. A form submission is an HTTP request sent to the server containing the values in a form.
Trigger Form Submission A form submission is triggered by clicking a button inside the form. A submit button can be an input element with type=submit or a button element.</description>
    </item>
    <item>
      <title>POST Form Submission</title>
      <link>http://localhost:1313/user-input-with-forms/reading/post-form-submission/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/post-form-submission/index.html</guid>
      <description>Form Submission Using POST Instead of using GET and query parameters to submit form data, we can use POST. To submit a form using a POST request, set the form&amp;rsquo;s method attribute to &amp;quot;POST&amp;quot;. Form data submitted via POST will be submitted in the body of the HTTP request. Data submitted by GET requests is less secure than POST because GET request URLs and the query parameters are cached and logged, possibly leaking sensitive data.</description>
    </item>
    <item>
      <title>Text Inputs</title>
      <link>http://localhost:1313/user-input-with-forms/reading/text-inputs/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/text-inputs/index.html</guid>
      <description>As you know from interacting with web forms, it&amp;rsquo;s possible to use more than simple text inputs. There are additional input types, each with different uses. Many of the elements are &amp;lt;input&amp;gt; tags with a different type value, however some have entirely different tag names. The next few sections contain lists of input types.
To start, here are three types of text inputs. These input types can contain text of any value.</description>
    </item>
    <item>
      <title>Specialized Text Inputs</title>
      <link>http://localhost:1313/user-input-with-forms/reading/specialized-text-inputs/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/specialized-text-inputs/index.html</guid>
      <description>For these text inputs the browser will validate and provide feedback to the user based on rules for the declared type.
Type Syntax Description Demo date &amp;lt;input type=&amp;quot;date&amp;quot; name=&amp;quot;flightDate&amp;quot;/&amp;gt; Browser validates the value is a valid date format. Some browsers provide a date picker. email &amp;lt;input type=&amp;quot;email&amp;quot; name=&amp;quot;emailAddress&amp;quot;/&amp;gt; Browser validates the value is a valid email address format. number &amp;lt;input type=&amp;quot;number&amp;quot; name=&amp;quot;fuelTemp&amp;quot;/&amp;gt; Browser validates the value is a valid number format.</description>
    </item>
    <item>
      <title>Checkbox Input</title>
      <link>http://localhost:1313/user-input-with-forms/reading/checkbox-input/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/checkbox-input/index.html</guid>
      <description>A checkbox input represents a box to check. Checkbox inputs can be used by themselves or in groups. Checkbox inputs are best used with &amp;lt;label&amp;gt; tags.
Type Syntax Description Demo checkbox &amp;lt;input type=&amp;quot;checkbox&amp;quot; name=&amp;quot;signUp&amp;quot;/&amp;gt; A small box for marking form option as checked. sign up Examples Example One checkbox. No value attribute is set, so the default value of on is submitted.
&amp;lt;label&amp;gt;crew&amp;lt;input type=&amp;#34;checkbox&amp;#34; name=&amp;#34;crewReady&amp;#34;/&amp;gt;&amp;lt;/label&amp;gt; Submitted (if checked)
crewReady=on Example Multiple checkbox inputs.</description>
    </item>
    <item>
      <title>Radio Input</title>
      <link>http://localhost:1313/user-input-with-forms/reading/radio-input/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/radio-input/index.html</guid>
      <description>Radio inputs allow a user to pick one option out of a grouping of options. Radio inputs with the same name are grouped. Only one radio input in a group can be chosen at a time. The value attribute of the chosen radio input will be submitted. Radio inputs are best used with &amp;lt;label&amp;gt; tags.
Type Syntax Description Demo radio &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;crewReady&amp;quot; value=&amp;quot;yes&amp;quot;/&amp;gt; A small circle that allows selecting one of multiple values.</description>
    </item>
    <item>
      <title>Select Input</title>
      <link>http://localhost:1313/user-input-with-forms/reading/select-input/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/select-input/index.html</guid>
      <description>Select inputs create a clickable menu that displays options and allows the user to select one. The available options are defined by &amp;lt;option&amp;gt; tags inside of the &amp;lt;select&amp;gt;&amp;lt;/select&amp;gt; tag.
&amp;lt;option&amp;gt; tags have a value attribute which defines the value submitted if that option is selected. The text inside the &amp;lt;option&amp;gt;Option text&amp;lt;/option&amp;gt; is what is displayed in the select menu.
Type Syntax Description Demo select &amp;lt;select name=&amp;quot;weather&amp;quot;&amp;gt;&amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;clear&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;2&amp;quot;&amp;gt;cloudy&amp;lt;/option&amp;gt;&amp;lt;/select&amp;gt; A menu that allows selection of one option.</description>
    </item>
    <item>
      <title>Validation with JavaScript</title>
      <link>http://localhost:1313/user-input-with-forms/reading/validation-with-javascript/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/user-input-with-forms/reading/validation-with-javascript/index.html</guid>
      <description>Validating form inputs before submitting the form can make the user experience much smoother. Some input types have built-in browser validation for basic formats such as numbers and email addresses. We can use event handlers to perform more complex validation on form input values.
Form Inputs and the DOM Before we can validate what the user has typed we need to understand how to use form inputs with the DOM. Remember that the DOM is a JavaScript representation of the HTML document.</description>
    </item>
  </channel>
</rss>