<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: Introduction to Web Dev</title>
    <link>http://localhost:1313/errors-and-debugging/reading/index.html</link>
    <description>Reading Content What is Debugging? Categories of Errors Diagnosing Error Messages Error Types Debugging Logic Errors How to Avoid Debugging Asking Good Questions </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Aug 2023 10:26:29 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/errors-and-debugging/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is Debugging?</title>
      <link>http://localhost:1313/errors-and-debugging/reading/what-is-debugging/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/what-is-debugging/index.html</guid>
      <description>Programming is a complex process. Since it is done by human beings, errors often occur. Programming errors are called bugs and the process of tracking them down and correcting them is called debugging.&#xA;Some claim that in 1947, a dead moth caused a problem in one of the first computers. The term “bug” has remained in use since, to refer to any issue that prevents a program from working as intended. National Geographic even has an image of the supposed first bug .</description>
    </item>
    <item>
      <title>Categories of Errors</title>
      <link>http://localhost:1313/errors-and-debugging/reading/categories-of-errors/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/categories-of-errors/index.html</guid>
      <description>It is useful to distinguish between categories of errors in order to quickly identify and fix them. Each category manifests itself in a different way, and some strategies may be more useful for certain types of errors.&#xA;Stages of JavaScript Execution In order to understand programming errors it is useful to understand the two stages of code execution.&#xA;Parsing Before code can be run, it must first be parsed, or validated and prepared for execution. This is known as the parsing stage, and you can think of it like the pre-flight check for a plane or space craft.</description>
    </item>
    <item>
      <title>Diagnosing Error Messages</title>
      <link>http://localhost:1313/errors-and-debugging/reading/diagnosing-error-messages/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/diagnosing-error-messages/index.html</guid>
      <description>Syntax and runtime errors always produce error messages. Reading and understanding error messages is a crucial first step in fixing these types of bugs.&#xA;Error messages are your friends. This idea can seem foreign to new programmers, because an error message is a signal that your program is broken. When we are working with a broken program, we might feel frustrated, like we do not fully understand the concepts at hand.</description>
    </item>
    <item>
      <title>Error Types</title>
      <link>http://localhost:1313/errors-and-debugging/reading/error-types/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/error-types/index.html</guid>
      <description>An error type is the classification that JavaScript uses to group errors based on their cause. In future lessons, we will learn that an error type is actually something called a built-in object. For now, understanding the different types of errors will help us become faster at debugging.&#xA;Each error that JavaScript reports has an error type, and the type is included in the error message. For example, an earlier message reported the error type as SyntaxError.</description>
    </item>
    <item>
      <title>Debugging Logic Errors</title>
      <link>http://localhost:1313/errors-and-debugging/reading/debugging-logic-errors/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/debugging-logic-errors/index.html</guid>
      <description>We can debug runtime and syntax errors using the error messages produced. Logic errors, however, do not generally produce error messages. This sometimes makes them tougher to debug.&#xA;While we can’t provide a step-by-step approach that applies to every possible logic error, we can give you some solid strategies. Two such strategies—using debugger tools and writing tests—will be covered in future lessons. In this section, we start with a basic and effective way to debug logic errors.</description>
    </item>
    <item>
      <title>How to Avoid Debugging</title>
      <link>http://localhost:1313/errors-and-debugging/reading/how-to-avoid-debugging/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/how-to-avoid-debugging/index.html</guid>
      <description>While debugging is an unavoidable part of programming, you can reduce the number of bugs you encounter by working carefully.&#xA;Start Small This is probably the best piece of advice for programmers at every level. It can be tempting to sit down and write an entire program all at once. However, this leaves a large number of possibilities when the program does not work. The errors could be hiding anywhere in the code. The more code, the more possibilities exist. Where to start? How to figure out what went wrong?</description>
    </item>
    <item>
      <title>Asking Good Questions</title>
      <link>http://localhost:1313/errors-and-debugging/reading/asking-good-questions/index.html</link>
      <pubDate>Tue, 01 Aug 2023 10:26:29 -0500</pubDate>
      <guid>http://localhost:1313/errors-and-debugging/reading/asking-good-questions/index.html</guid>
      <description>If you still cannot find the bug in your code after using the strategies outlined in this chapter, do not hesitate to reach out to other programmers.&#xA;Whether you are asking your teaching assistant, another student, or a stranger in an online forum, you should first be able to answer the 3 questions outlined below.&#xA;Not only will these questions help others assist you more directly, but they may just lead you to the answer yourself!</description>
    </item>
  </channel>
</rss>