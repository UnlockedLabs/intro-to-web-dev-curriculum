<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assignment 1: Candidate Testing :: Introduction to Web Dev</title>
    <link>http://localhost:1313/assignments/candidate-testing/index.html</link>
    <description>Assignment Overview Project Introduction Task 1: Minimum Viable Quiz Task 2: Multiple Questions Task 3: Grade the Quiz </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Jun 2023 10:39:25 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/assignments/candidate-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project Introduction</title>
      <link>http://localhost:1313/assignments/candidate-testing/intro/index.html</link>
      <pubDate>Tue, 20 Jun 2023 10:39:25 -0500</pubDate>
      <guid>http://localhost:1313/assignments/candidate-testing/intro/index.html</guid>
      <description>Getting Started Welcome to your first graded assignment. We would like you to create a short quiz console application.&#xA;Fork and clone the starter code repo .&#xA;Open a terminal and cd into the project file. You will see candidate-testing.js and other files if you run ls Run npm install to bring in all of the packages you need to run the application You should be ready to code your application. Good luck!</description>
    </item>
    <item>
      <title>Task 1: Minimum Viable Quiz</title>
      <link>http://localhost:1313/assignments/candidate-testing/task-1/index.html</link>
      <pubDate>Tue, 20 Jun 2023 10:39:25 -0500</pubDate>
      <guid>http://localhost:1313/assignments/candidate-testing/task-1/index.html</guid>
      <description>For Task 1, you are going to:&#xA;Ask the candidate for their name Create a quiz that asks a single question Check if the candidate answered the question correctly Inform the candidate if they answered the question correctly or not Create a greeting using the candidate’s name The starter code contains functions. These pieces of code will be covered later in this course. However, instructions have been provided to help you work with them. The final page of these instructions will have a little more information about functions if you are curious.</description>
    </item>
    <item>
      <title>Task 2: Multiple Questions</title>
      <link>http://localhost:1313/assignments/candidate-testing/task-2/index.html</link>
      <pubDate>Tue, 20 Jun 2023 10:39:25 -0500</pubDate>
      <guid>http://localhost:1313/assignments/candidate-testing/task-2/index.html</guid>
      <description>Now that your small app is working, expand it to deal with multiple questions. This time, you only have one TODO item in the starter code. You will need to determine which lines need to be modified.&#xA;Define questions and correctAnswers variables as arrays. Use the table below to fill these arrays.&#xA;Replace your code from TODO 1.2b with a loop that programmatically asks each question in the array and stores the user’s responses.</description>
    </item>
    <item>
      <title>Task 3: Grade the Quiz</title>
      <link>http://localhost:1313/assignments/candidate-testing/task-3/index.html</link>
      <pubDate>Tue, 20 Jun 2023 10:39:25 -0500</pubDate>
      <guid>http://localhost:1313/assignments/candidate-testing/task-3/index.html</guid>
      <description>Finally, calculate the candidate’s score and print the results. Look for TODO 3.2. The rest of the steps involve updating code you have written and adding more code.&#xA;Don’t remove anything in the file that you haven’t written. Doing so may cause your program to behave unexpectedly - and we might not be able to grade it!&#xA;Your task here is to:&#xA;Compare the candidate answers with the correct answers,</description>
    </item>
  </channel>
</rss>