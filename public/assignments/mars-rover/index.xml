<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assignment 3: Mars Rover :: Introduction to Web Dev</title>
    <link>http://localhost:1313/assignments/mars-rover/index.html</link>
    <description>Content Links Task 1: Intro and Starter Code Task 2: Command Class Task 3: Message Class Task 4: Rover Class Task 5: Submitting Your Work </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:55:09 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/assignments/mars-rover/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Task 1: Intro and Starter Code</title>
      <link>http://localhost:1313/assignments/mars-rover/starter-code/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/mars-rover/starter-code/index.html</guid>
      <description>This task puts your unit testing, modules making, and exception handling knowledge to use by writing tests and classes for the Mars rover named Curiosity.&#xA;You will create a simulation for issuing commands to Curiosity. The idea is to create a command at mission control, convert that command into a message, send it to the rover, then have the rover respond to that message.</description>
    </item>
    <item>
      <title>Task 2: Command Class</title>
      <link>http://localhost:1313/assignments/mars-rover/command-class/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/mars-rover/command-class/index.html</guid>
      <description>Command Class Description We’ll follow TDD practices for the creation of Message and Rover, but for this class, Command, we’ve provided the functionality. Command is already written for you and you do not need to modify it to write passing tests. Open up and examine the file command.js.&#xA;This class builds an object with two properties: constructor(commandType, value)&#xA;commandType is a string that represents the type of command. We will go over the details of the types when we get to the Rover class and tests. At this time, note that a command type will be one of the following: MODE_CHANGE, MOVE, or STATUS_CHECK. To peek ahead at the full functionality of these types, refer to the Command Types Table . value is a value related to the type of command. Example let modeCommand = new Command(&#39;MODE_CHANGE&#39;, &#39;LOW_POWER&#39;); let moveCommand = new Command(&#39;MOVE&#39;, 12000);</description>
    </item>
    <item>
      <title>Task 3: Message Class</title>
      <link>http://localhost:1313/assignments/mars-rover/message-class/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/mars-rover/message-class/index.html</guid>
      <description>Up to this point, you have got a copy of the starter code and taken an initial dive into how the Command class works. Now let’s turn our focus to the Message class!&#xA;Message Recall, the role of a message object is to bundle commands to send to the rover.&#xA;Remember with TDD, first read through the description of the class. Then read through the given tests and think about what each test means for the desired behavior of the class. Only then should you start coding the Message class.</description>
    </item>
    <item>
      <title>Task 4: Rover Class</title>
      <link>http://localhost:1313/assignments/mars-rover/rover-class/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/mars-rover/rover-class/index.html</guid>
      <description>With the Message Class section completed, let’s turn our attention to the final class, the Rover class.&#xA;Rover Rover receives a message object, updates its properties from the message, and returns the results. Remember to use TDD by first reading the class description, writing tests, and then coding the class.&#xA;Rover Class Description This class builds a rover object with a few properties, and it also contains a function outside of constructor to handle updates to its properties.</description>
    </item>
    <item>
      <title>Task 5: Submitting Your Work</title>
      <link>http://localhost:1313/assignments/mars-rover/submitting-your-work/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/mars-rover/submitting-your-work/index.html</guid>
      <description>Submitting Your Work Note Make sure to change the name of the studentgrade.specx.js file located in the spec directory to studentgrade.spec.js to run all tests once more.&#xA;Once your Rover class is completed and you have 14 passing tests, you are ready to submit.&#xA;Tip Make sure that you did not edit either studentgrading.spec.js, grading.js, or any file in the helpers directory inside spec. Changes to these files could affect your grade.</description>
    </item>
  </channel>
</rss>