<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assignment 5: Launch Checklist on Introduction to Web Dev</title>
    <link>http://localhost:1313/assignments/launch-checklist/index.html</link>
    <description>Recent content in Assignment 5: Launch Checklist on Introduction to Web Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Jul 2023 12:55:09 -0500</lastBuildDate><atom:link href="http://localhost:1313/assignments/launch-checklist/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Task 1: Setting Up the Starter Code</title>
      <link>http://localhost:1313/assignments/launch-checklist/starter-code/index.html</link>
      <pubDate>Fri, 07 Jul 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/launch-checklist/starter-code/index.html</guid>
      <description>Fork and clone the starter code repository .
To get started, navigate to the directory with your copy of the starter code.
Run npm install. Open index.html with Firefox to verify that your starter code is working. When you open index.html in the browser, you should see the Launch Checklist form with a rectangle above it for the mission destination and a rectangle below it that simply says &amp;ldquo;Awaiting Information Before Launch&amp;rdquo;.</description>
    </item>
    <item>
      <title>Task 2: Adding Validation</title>
      <link>http://localhost:1313/assignments/launch-checklist/validation/index.html</link>
      <pubDate>Fri, 07 Jul 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/launch-checklist/validation/index.html</guid>
      <description>Adding Alerts Now, let&amp;rsquo;s add validation to notify the user if they forgot to enter a value for any one of the fields.
This process is going to look similar to the validation section in the chapter on forms. Add an alert to notify the user that all fields are required.
You also want to make sure that the user entered valid info for each of the fields. Valid information for the fields means that the user submits a value that is easily converted to the correct data type for our fellow engineers.</description>
    </item>
    <item>
      <title>Task 3: Fetching Planetary Data</title>
      <link>http://localhost:1313/assignments/launch-checklist/planet-fetch/index.html</link>
      <pubDate>Fri, 07 Jul 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/launch-checklist/planet-fetch/index.html</guid>
      <description>Finally, we need some JSON to fill in the crew on the mission destination. Our planetary data can be found in JSON format . Review the list and decide which planet you want to send our intrepid crew to and make note of the index number.
Note When fetching more than one JSON object, we get an array of all of the JSON objects. In this case, that means an array of our possible mission destinations.</description>
    </item>
    <item>
      <title>Task 4: Submitting Your Work</title>
      <link>http://localhost:1313/assignments/launch-checklist/submission/index.html</link>
      <pubDate>Fri, 07 Jul 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/assignments/launch-checklist/submission/index.html</guid>
      <description>The End Result After you implement everything, the following form submission would result in the proper updates to the launchStatus and faultyItems list.
With only 890 liters of fuel, the status of the launch becomes red and states that the shuttle is not ready. The list has also updated to indicate that that is not enough fuel for the shuttle to launch.
If the user forgets to enter the cargo mass, then an alert pops up letting the user know that all fields are required.</description>
    </item>
  </channel>
</rss>