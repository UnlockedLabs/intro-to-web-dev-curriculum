<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter 17: Exceptions on Introduction to Web Dev</title>
    <link>http://localhost:1313/exceptions/index.html</link>
    <description>Recent content in Chapter 17: Exceptions on Introduction to Web Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:55:09 -0500</lastBuildDate><atom:link href="http://localhost:1313/exceptions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading</title>
      <link>http://localhost:1313/exceptions/reading/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/exceptions/reading/index.html</guid>
      <description>Reading Content Introduction Throw Exceptions as Control Flow </description>
    </item>
    <item>
      <title>Exercises: Exceptions</title>
      <link>http://localhost:1313/exceptions/exercises/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/exceptions/exercises/index.html</guid>
      <description>Zero Division: Throw Write a function called divide that takes two parameters: a numerator and a denominator.
Your function should return the result of numerator / denominator.
However, if denominator is zero you should throw the error, &amp;quot;Attempted to divide by zero.&amp;quot;
Note Hint: You can use an if / throw statement to complete this exercise.
Code your function within the javascript-projects/exceptions/exercises/divide.js
Check Your Solution function divide(numerator, denominator) { if (denominator === 0) { throw Error(&amp;#39;You cannot divide by zero!</description>
    </item>
    <item>
      <title>Studio: Strategic Debugging</title>
      <link>http://localhost:1313/exceptions/studio/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/exceptions/studio/index.html</guid>
      <description>Summary At this point, we have seen a lot of different types of errors. We have possibly created logic errors or syntax errors and now, we have just learned about the Error object in JavaScript. The goal of this studio is for us to develop strategies for debugging so that we can get rid of the bugs and get back to coding!
Activity Think of a bug you have seen in your code.</description>
    </item>
    <item>
      <title>Next Steps</title>
      <link>http://localhost:1313/exceptions/next-steps/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/exceptions/next-steps/index.html</guid>
      <description>Upon completing everything in this chapter, you are ready to move onto the chapter on classes. If you would like to read more about exceptions before continuing forward, here are some of our favorite resources.
W3Schools JavaScript Errors mdn web docs_ on Control flow and error handling tutorialspoint errors and exceptions handling geeksforgeeks JavaScript Error and Exceptional Handling with Examples </description>
    </item>
  </channel>
</rss>