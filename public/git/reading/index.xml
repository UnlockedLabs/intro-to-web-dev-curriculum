<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: Introduction to Web Dev</title>
    <link>http://localhost:1313/git/reading/index.html</link>
    <description> What is Git? Repositories and Commits Remote Repositories Branches Merging in Git </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Sep 2023 13:52:51 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/git/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is Git?</title>
      <link>http://localhost:1313/git/reading/background/index.html</link>
      <pubDate>Tue, 26 Sep 2023 13:52:51 -0500</pubDate>
      <guid>http://localhost:1313/git/reading/background/index.html</guid>
      <description>Version Control Systems A version control system (VCS) is a system for tracking changes to a code base and storing each version. Version control systems assist programmers with keeping backups and a history of the revisions made to the code base over time. With that history, programmers can roll back to a version without a particular bug. A VCS also enables collaboration between programmers as they can work on different versions of a code base and share their work.</description>
    </item>
    <item>
      <title>Repositories and Commits</title>
      <link>http://localhost:1313/git/reading/repositories-and-commits/index.html</link>
      <pubDate>Tue, 26 Sep 2023 13:52:51 -0500</pubDate>
      <guid>http://localhost:1313/git/reading/repositories-and-commits/index.html</guid>
      <description>Create a Repository To get started with a local git repository, the programmer must first create one. So far, we made all the repositories for you and you were able to clone the code to your local machine. To create a git repository, the programmer navigates to their project directory and uses the command git init, like so:&#xA;Students-Computer:~ student$ mkdir homework Students-Computer:~ student$ cd homework Students-Computer:homework student$ git init Initialized empty Git repository in /Users/student/homework/.git/ </description>
    </item>
    <item>
      <title>Remote Repositories</title>
      <link>http://localhost:1313/git/reading/remote-repositories/index.html</link>
      <pubDate>Tue, 26 Sep 2023 13:52:51 -0500</pubDate>
      <guid>http://localhost:1313/git/reading/remote-repositories/index.html</guid>
      <description>Local, Remote, GitHub, Oh My! So far, this chapter has covered how to setup a Git repository on the local machine. However, one of the benefits of using a VCS is to store backups. If something bad happens to a coder’s machine, they might lose all of the code for their projects! This is where remote repositories come in. Instead of keeping a Git repository only on a local machine, the code base is also saved in a remote repository. Any team members working on the project keep copies of the code on their local machine.</description>
    </item>
    <item>
      <title>Branches</title>
      <link>http://localhost:1313/git/reading/branches/index.html</link>
      <pubDate>Tue, 26 Sep 2023 13:52:51 -0500</pubDate>
      <guid>http://localhost:1313/git/reading/branches/index.html</guid>
      <description>Branching in Git So far, this book has talked about Git’s ability to store different versions of a code base. What if two programmers want to work on different features of the code base at the same time? They may want to start with the same version and then one programmer wants to change the HTML and the other the CSS. It would not be effective for the two programmers to commit their changes to the repository at the same time. Instead, Git has branches. A branch is a separate version of the same code base. Like a branch on a tree, a branch in Git shares the same trunk as other branches, but is an individual. With branches, the two programmers can work on separate versions of the same website without interfering with each other. Besides collaboration, programmers also use feature branches to store and test new ideas for their software.</description>
    </item>
    <item>
      <title>Merging in Git</title>
      <link>http://localhost:1313/git/reading/merge/index.html</link>
      <pubDate>Tue, 26 Sep 2023 13:52:51 -0500</pubDate>
      <guid>http://localhost:1313/git/reading/merge/index.html</guid>
      <description>How to Merge A merge in Git occurs when two branches are combined in the repository.&#xA;Example Let’s say a programmer wants to merge a branch called test into main. To accomplish this:&#xA;The programmer switches to the branch they want to merge into. In this case: $ git checkout main </description>
    </item>
  </channel>
</rss>