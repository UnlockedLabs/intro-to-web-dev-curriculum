<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading :: Introduction to Web Dev</title>
    <link>http://localhost:1313/loops/reading/index.html</link>
    <description>Reading Content Links Iteration for Loops Iterating Over Collections Breaking Down the for Statement The Accumulator Pattern while Loops Terminating a Loop with break Choosing Which Loop to Use </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2023 09:21:11 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/loops/reading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Iteration</title>
      <link>http://localhost:1313/loops/reading/iteration/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/iteration/index.html</guid>
      <description>When repeating the same action over and over again, a human is likely to make a mistake. Computers, however, possess the incredible ability to carry out repetitive tasks without making mistakes.&#xA;To see this, let’s consider an appropriate, if somewhat contrived, example. Suppose you want to print out the integers 0 through 50. With the tools you currently have at your disposal, your program would look like this:&#xA;1 2 3 4 5 6 </description>
    </item>
    <item>
      <title>for Loops</title>
      <link>http://localhost:1313/loops/reading/for-loops/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/for-loops/index.html</guid>
      <description>The for loop is the first JavaScript tool for iteration that we will explore. A for loop is typically used for definite iteration. Definite iteration is the process of repeating a specific task with a specific data set. When a for loop begins it can usually be determined exactly how many times it will execute: once for each item in the data set.&#xA;for Loop Syntax We have already seen the basic syntax of a for loop.</description>
    </item>
    <item>
      <title>Iterating Over Collections</title>
      <link>http://localhost:1313/loops/reading/iterating-over-collections/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/iterating-over-collections/index.html</guid>
      <description>One of the most common uses of a for loop is to carry out a task once for each item in a collection. We have learned about two types of collections, strings and arrays. When using a loop with a collection in this way, we say that the loop iterates over the collection.&#xA;Iterating Over Strings The following example prints each of the characters of the string &#34;LaunchCode&#34; on a separate line.</description>
    </item>
    <item>
      <title>Breaking Down the for Statement</title>
      <link>http://localhost:1313/loops/reading/for-statement-breakdown/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/for-statement-breakdown/index.html</guid>
      <description>Having seen several examples, we will now explore the syntax of a for loop in more depth.&#xA;Recall the first example of a for loop that we looked at.&#xA;1 2 3 for (let i = 0; i &lt; 51; i++) { console.log(i); }</description>
    </item>
    <item>
      <title>The Accumulator Pattern</title>
      <link>http://localhost:1313/loops/reading/accumulator-pattern/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/accumulator-pattern/index.html</guid>
      <description>A pattern is a commonly-used approach to solve a group of similar programming problems.&#xA;This section introduces your first pattern, which we will explore in-depth after looking at a motivating example.&#xA;Adding 1…n Let’s write a program that adds up the integers 1…n, where n is an integer variable that we will create.&#xA;If you were to do this with pen and paper, you would write out a single formula and compute the answer. For example, for n = 6 you would write:</description>
    </item>
    <item>
      <title>while Loops</title>
      <link>http://localhost:1313/loops/reading/while-loops/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/while-loops/index.html</guid>
      <description>There is another JavaScript construct that can also be used for iteration, the while loop. The while loop provides a much more general mechanism for iterating. Like a for loop, it uses a condition to determine whether the loop body will continue to execute. Unlike a for loop, however, it does not have initial and update expressions.&#xA;while Loop Syntax The general syntax of a while loop looks like this:</description>
    </item>
    <item>
      <title>Terminating a Loop with break</title>
      <link>http://localhost:1313/loops/reading/terminating-loops/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/terminating-loops/index.html</guid>
      <description>JavaScript, like most programming languages, provides a mechanism for terminating a loop before it would complete otherwise. The break keyword, when used within a loop, will immediately terminate the execution of any loop. Program execution then continues at the next line of code below the loop.&#xA;Example This loop executes 12 times, for values of i from 0 to 11. During the twelfth iteration, i is 11 and the condition i &gt; 10 evaluates to true for the first time and execution reaches the break statement. The loop is immediately terminated at that point.</description>
    </item>
    <item>
      <title>Choosing Which Loop to Use</title>
      <link>http://localhost:1313/loops/reading/choosing-loops/index.html</link>
      <pubDate>Mon, 28 Aug 2023 09:21:11 -0500</pubDate>
      <guid>http://localhost:1313/loops/reading/choosing-loops/index.html</guid>
      <description>The for loop is typically used to iterate through a fixed set of values that can be determined before the loop executes. This is why we say that a for loop exhibits definite iteration.&#xA;On the other hand, the while loop is more flexible, as we saw with the example of validating user input. In that case, we could not determine in advance how many times the loop would iterate; it depended entirely on the values provided by the user during program execution. For this reason, a while loop is often described as indefinite iteration. We expect that eventually the condition controlling the iteration will evaluate to false and the iteration will stop. (Unless we have an infinite loop, which is a problem we want to avoid.)</description>
    </item>
  </channel>
</rss>