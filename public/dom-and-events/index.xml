<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter 23: The DOM and Events :: Introduction to Web Dev</title>
    <link>http://localhost:1313/dom-and-events/index.html</link>
    <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Understand the DOM is used to make dynamic web pages Use DOM objects and methods to alter an HTML web page Understand what events are and that JavaScript is an event driven language Handle and trigger events in JavaScript Differentiate between dynamic and static web pages Describe how the JavaScript environment of a browser is different from other JavaScript environments, such as Node.js Use the to include JavaScript into an HTML page Know to put your after the elements you want to alter, unless using load events Understand what the Document Object Model (DOM) is Understand and use the global variable window and these methods and properties: window.alert(), window.console, window.confirm(), window.location. Understand and use the global variable document and these methods and properties: document.title, document.getElementById(), document.querySelector(), document.querySelectorAll() Understand and use Element methods and properties: element.innerHTML, element.style, element.getAttribute(), element.setAttribute(), element.addEventListener() Know that JavaScript is an event driven programming language Key Terminology Here is a list of key terms for this chapter, broken down by the page the term first appears on.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2023 12:55:09 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/dom-and-events/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading</title>
      <link>http://localhost:1313/dom-and-events/reading/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/dom-and-events/reading/index.html</guid>
      <description>Reading Content JavaScript and the Browser The Dom More DOM Methods and Properties Events Event Listeners Event Types </description>
    </item>
    <item>
      <title>Exercises: The DOM and Events</title>
      <link>http://localhost:1313/dom-and-events/exercises/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/dom-and-events/exercises/index.html</guid>
      <description>Time to make a flight simulator for your fellow astronauts! The provided HTML and JavaScript files can be used for all of the exercises. For each exercise, the requirements and desired effect of the events is listed.&#xA;Note The following files can be found within your javascript-projects/dom-and-events/exercises directory.&#xA;When the Take off button is clicked, the text The shuttle is on the ground changes to Houston, we have liftoff!. The Take off button has an id=&#34;liftoffButton&#34; attribute.</description>
    </item>
    <item>
      <title>Studio: The DOM and Events</title>
      <link>http://localhost:1313/dom-and-events/studio/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/dom-and-events/studio/index.html</guid>
      <description>Now that we can build a basic flight simulator, we want to add more controls for the staff at our space station. The HTML, CSS, and JavaScript files are provided. For each event, the requirements and desired effect is listed.&#xA;Getting Started Open the starter code within your javascript-projects/dom-and-events/studio directory.&#xA;The Requirements Use the window load event to ensure all elements have loaded before attaching event handlers. When the “Take off” button is clicked, the following should happen: A window confirm should let the user know “Confirm that the shuttle is ready for takeoff.” If the shuttle is ready for liftoff, then add the points below: The flight status should change to “Shuttle in flight.” The background color of the shuttle flight screen (id = &#34;shuttleBackground&#34;) should change from green to blue. The shuttle height should increase by 10,000 miles. Note When you are moving the shuttle, you want to use absolute positioning in CSS. Absolute positioning means positioning the object based on its location in the parent object. In the case of our flight simulator, the parent object is a div with the id, shuttleBackground. Relative positioning means positioning the object based on its fellow child objects. We might use relative positioning if there were planet objects within our shuttleBackground div.</description>
    </item>
    <item>
      <title>Next Steps</title>
      <link>http://localhost:1313/dom-and-events/next-steps/index.html</link>
      <pubDate>Thu, 25 May 2023 12:55:09 -0500</pubDate>
      <guid>http://localhost:1313/dom-and-events/next-steps/index.html</guid>
      <description>Now that you have completed The DOM and Events chapter you are ready to learn about HTTP!. If you would like some additional resources on the DOM in JavaScript, here are a few of our favorites.&#xA;DigitalOcean: Understanding the DOM W3Schools HTML DOM mdn web docs_ Introduction to the DOM geeksforgeeks DOM </description>
    </item>
  </channel>
</rss>